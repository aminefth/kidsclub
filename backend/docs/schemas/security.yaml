components:
  schemas:
    SecurityAuditResponse:
      type: object
      properties:
        passed:
          type: boolean
          description: Whether the security audit passed
          example: true
        score:
          type: integer
          minimum: 0
          maximum: 100
          description: Security score out of 100
          example: 95
        vulnerabilities:
          type: array
          items:
            $ref: '#/components/schemas/SecurityVulnerability'
          description: List of identified vulnerabilities
        recommendations:
          type: array
          items:
            type: string
          description: Security improvement recommendations
          example:
            - "Consider implementing additional rate limiting"
            - "Review suspicious activity logs"
        timestamp:
          type: string
          format: date-time
          description: Audit timestamp
          example: "2025-08-26T23:54:00.000Z"

    SecurityVulnerability:
      type: object
      properties:
        type:
          type: string
          description: Vulnerability type
          example: "WEAK_JWT_SECRET"
        severity:
          type: string
          enum: [low, medium, high, critical]
          description: Vulnerability severity
          example: "high"
        description:
          type: string
          description: Vulnerability description
          example: "JWT secret is too short"
        recommendation:
          type: string
          description: Fix recommendation
          example: "Use a JWT secret with at least 32 characters"

    SecurityMetrics:
      type: object
      properties:
        totalRequests:
          type: integer
          description: Total requests processed
          example: 15420
        blockedRequests:
          type: integer
          description: Number of blocked malicious requests
          example: 23
        suspiciousActivity:
          type: integer
          description: Suspicious activity incidents
          example: 5
        failedLogins:
          type: integer
          description: Failed login attempts
          example: 12
        rateLimitHits:
          type: integer
          description: Rate limit violations
          example: 8
        lastUpdated:
          type: string
          format: date-time
          description: Metrics last updated timestamp
          example: "2025-08-26T23:54:00.000Z"

    TokenBlacklistRequest:
      type: object
      required:
        - token
        - reason
      properties:
        token:
          type: string
          description: JWT token to blacklist
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        reason:
          type: string
          description: Reason for blacklisting
          example: "Security breach - user account compromised"

    TokenBlacklistResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Operation success status
          example: true
        message:
          type: string
          description: Success message
          example: "Token successfully blacklisted"
        tokenId:
          type: string
          description: Blacklisted token identifier
          example: "user_123_token_abc"

    DependencyVulnerability:
      type: object
      properties:
        name:
          type: string
          description: Package name
          example: "express"
        currentVersion:
          type: string
          description: Currently installed version
          example: "4.18.2"
        latestVersion:
          type: string
          description: Latest available version
          example: "4.19.0"
        severity:
          type: string
          enum: [info, low, moderate, high, critical]
          description: Vulnerability severity
          example: "moderate"
        vulnerabilities:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "GHSA-abc123"
              title:
                type: string
                example: "Cross-site scripting vulnerability"
              severity:
                type: string
                example: "moderate"
              url:
                type: string
                example: "https://github.com/advisories/GHSA-abc123"
        recommendation:
          type: string
          description: Update recommendation
          example: "Update to version 4.19.0 or later"

paths:
  /api/v1/security/audit:
    get:
      tags:
        - Security
      summary: Perform security audit
      description: |
        Performs a comprehensive security audit of the platform including:
        - Environment variable validation
        - JWT configuration assessment
        - Security middleware verification
        - Dependency vulnerability scanning
        - Overall security score calculation
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Security audit completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  audit:
                    $ref: '#/components/schemas/SecurityAuditResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/v1/security/metrics:
    get:
      tags:
        - Security
      summary: Get security metrics
      description: |
        Retrieves real-time security metrics including:
        - Request statistics
        - Blocked requests count
        - Suspicious activity incidents
        - Failed login attempts
        - Rate limiting violations
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Security metrics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  metrics:
                    $ref: '#/components/schemas/SecurityMetrics'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/v1/security/blacklist-token:
    post:
      tags:
        - Security
      summary: Blacklist JWT token
      description: |
        Adds a JWT token to the blacklist, immediately invalidating it.
        This is useful for:
        - Compromised accounts
        - Forced logout scenarios
        - Security incident response
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBlacklistRequest'
      responses:
        '200':
          description: Token blacklisted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBlacklistResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/v1/security/dependencies:
    get:
      tags:
        - Security
      summary: Get dependency vulnerabilities
      description: |
        Scans project dependencies for known vulnerabilities and provides:
        - Vulnerability severity assessment
        - Update recommendations
        - Risk scoring
        - Remediation guidance
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dependency scan completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  vulnerabilities:
                    type: array
                    items:
                      $ref: '#/components/schemas/DependencyVulnerability'
                  summary:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 5
                      critical:
                        type: integer
                        example: 0
                      high:
                        type: integer
                        example: 1
                      moderate:
                        type: integer
                        example: 2
                      low:
                        type: integer
                        example: 2
                      info:
                        type: integer
                        example: 0
                  lastScan:
                    type: string
                    format: date-time
                    example: "2025-08-26T23:54:00.000Z"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/ServerError'
