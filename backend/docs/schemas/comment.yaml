components:
  schemas:
    # Comment Model Schemas
    Comment:
      type: object
      properties:
        _id:
          type: string
          description: "Unique comment identifier"
          example: "64f8a1b2c3d4e5f6a7b8c9d0"
        content:
          type: string
          minLength: 1
          maxLength: 2000
          description: "Comment content"
          example: "This is a great article! Thanks for sharing."
        author:
          type: object
          properties:
            _id:
              type: string
              example: "64f8a1b2c3d4e5f6a7b8c9d0"
            name:
              type: string
              example: "John Doe"
            avatar:
              $ref: '#/components/schemas/Avatar'
            isVerified:
              type: boolean
              example: true
        blogId:
          type: string
          description: "Associated blog ID"
          example: "64f8a1b2c3d4e5f6a7b8c9d1"
        parentId:
          type: string
          description: "Parent comment ID for nested comments"
          example: "64f8a1b2c3d4e5f6a7b8c9d2"
        depth:
          type: integer
          minimum: 0
          maximum: 5
          description: "Comment nesting depth"
          example: 1
        reactions:
          $ref: '#/components/schemas/Reactions'
        
        # Moderation
        isModerated:
          type: boolean
          description: "Comment has been moderated"
          example: false
        isFlagged:
          type: boolean
          description: "Comment has been flagged"
          example: false
        flagReasons:
          type: array
          items:
            type: string
            enum: [spam, inappropriate, harassment, misinformation, other]
          description: "Reasons for flagging"
          example: ["spam"]
        moderatedBy:
          type: string
          description: "Moderator user ID"
          example: "64f8a1b2c3d4e5f6a7b8c9d3"
        moderatedAt:
          type: string
          format: date-time
          description: "Moderation timestamp"
          example: "2025-08-26T21:50:13.608Z"
        
        # Kids Safety
        isKidsSafe:
          type: boolean
          description: "Comment is safe for children"
          example: true
        containsInappropriateContent:
          type: boolean
          description: "Contains inappropriate content"
          example: false
        
        # Analytics
        replyCount:
          type: integer
          description: "Number of replies"
          example: 3
        totalReactions:
          type: integer
          description: "Total number of reactions"
          example: 15
        
        createdAt:
          type: string
          format: date-time
          description: "Creation timestamp"
          example: "2025-08-26T21:50:13.608Z"
        updatedAt:
          type: string
          format: date-time
          description: "Last update timestamp"
          example: "2025-08-26T21:50:13.608Z"
      required:
        - _id
        - content
        - author
        - blogId
        - depth

    # Comment Thread (with nested replies)
    CommentThread:
      allOf:
        - $ref: '#/components/schemas/Comment'
        - type: object
          properties:
            replies:
              type: array
              items:
                $ref: '#/components/schemas/Comment'
              description: "Nested reply comments"

    # Comment Request Schemas
    CreateCommentRequest:
      type: object
      properties:
        content:
          type: string
          minLength: 1
          maxLength: 2000
          description: "Comment content"
          example: "This is a great article! Thanks for sharing."
        parentId:
          type: string
          description: "Parent comment ID for replies"
          example: "64f8a1b2c3d4e5f6a7b8c9d2"
      required:
        - content

    UpdateCommentRequest:
      type: object
      properties:
        content:
          type: string
          minLength: 1
          maxLength: 2000
          description: "Updated comment content"
          example: "This is an updated comment with more details."
      required:
        - content

    ReactToCommentRequest:
      type: object
      properties:
        type:
          type: string
          enum: [like, dislike, heart, laugh]
          description: "Reaction type"
          example: "like"
      required:
        - type

    FlagCommentRequest:
      type: object
      properties:
        reason:
          type: string
          enum: [spam, inappropriate, harassment, misinformation, other]
          description: "Reason for flagging"
          example: "spam"
        details:
          type: string
          maxLength: 500
          description: "Additional details about the flag"
          example: "This comment appears to be promotional spam"
      required:
        - reason

    ModerateCommentRequest:
      type: object
      properties:
        action:
          type: string
          enum: [approve, reject, hide, delete]
          description: "Moderation action"
          example: "approve"
        reason:
          type: string
          maxLength: 500
          description: "Moderation reason"
          example: "Comment approved after review"
      required:
        - action

    # Comment Response Schemas
    CommentResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Comment'

    CommentsListResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/CommentThread'

    CommentStatsResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                totalComments:
                  type: integer
                  example: 1250
                totalReplies:
                  type: integer
                  example: 450
                totalReactions:
                  type: integer
                  example: 3200
                averageDepth:
                  type: number
                  example: 1.8
                flaggedComments:
                  type: integer
                  example: 12
                moderatedComments:
                  type: integer
                  example: 8
                topReactors:
                  type: array
                  items:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: "64f8a1b2c3d4e5f6a7b8c9d0"
                          name:
                            type: string
                            example: "John Doe"
                          avatar:
                            $ref: '#/components/schemas/Avatar'
                      reactionCount:
                        type: integer
                        example: 45

    # Comment Search and Filter
    CommentSearchQuery:
      allOf:
        - $ref: '#/components/schemas/PaginationQuery'
        - type: object
          properties:
            blogId:
              type: string
              description: "Filter by blog ID"
              example: "64f8a1b2c3d4e5f6a7b8c9d1"
            authorId:
              type: string
              description: "Filter by author ID"
              example: "64f8a1b2c3d4e5f6a7b8c9d0"
            parentId:
              type: string
              description: "Filter by parent comment ID"
              example: "64f8a1b2c3d4e5f6a7b8c9d2"
            isModerated:
              type: boolean
              description: "Filter by moderation status"
              example: false
            isFlagged:
              type: boolean
              description: "Filter by flagged status"
              example: false
            isKidsSafe:
              type: boolean
              description: "Filter by kids safety"
              example: true
            minReactions:
              type: integer
              minimum: 0
              description: "Minimum number of reactions"
              example: 5
            dateFrom:
              type: string
              format: date
              description: "Filter from date"
              example: "2025-01-01"
            dateTo:
              type: string
              format: date
              description: "Filter to date"
              example: "2025-12-31"

    # Reaction Summary
    ReactionSummary:
      type: object
      properties:
        likes:
          type: integer
          example: 25
        dislikes:
          type: integer
          example: 2
        hearts:
          type: integer
          example: 15
        laughs:
          type: integer
          example: 8
        total:
          type: integer
          example: 50
        userReaction:
          type: string
          enum: [like, dislike, heart, laugh, null]
          description: "Current user's reaction"
          example: "like"
