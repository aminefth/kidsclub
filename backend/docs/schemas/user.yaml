components:
  schemas:
    # User Model Schemas
    User:
      type: object
      properties:
        _id:
          type: string
          description: "Unique user identifier"
          example: "64f8a1b2c3d4e5f6a7b8c9d0"
        name:
          type: string
          minLength: 2
          maxLength: 50
          description: "User's full name"
          example: "John Doe"
        email:
          type: string
          format: email
          description: "User's email address"
          example: "john.doe@example.com"
        role:
          $ref: '#/components/schemas/UserRole'
        status:
          $ref: '#/components/schemas/UserStatus'
        avatar:
          $ref: '#/components/schemas/Avatar'
        bio:
          type: string
          maxLength: 500
          description: "User biography"
          example: "Content creator passionate about family-friendly content"
        dateOfBirth:
          type: string
          format: date
          description: "User's date of birth"
          example: "1990-01-15"
        country:
          type: string
          description: "User's country"
          example: "United States"
        interests:
          type: array
          items:
            type: string
          description: "User's interests"
          example: ["technology", "education", "family"]
        socialLinks:
          $ref: '#/components/schemas/SocialLinks'
        followers:
          type: integer
          description: "Number of followers"
          example: 150
        following:
          type: integer
          description: "Number of users following"
          example: 75
        postsCount:
          type: integer
          description: "Number of published posts"
          example: 25
        isVerified:
          type: boolean
          description: "Email verification status"
          example: true
        lastActive:
          type: string
          format: date-time
          description: "Last activity timestamp"
          example: "2025-08-26T21:50:13.608Z"
        createdAt:
          type: string
          format: date-time
          description: "Account creation timestamp"
          example: "2025-01-15T10:30:00.000Z"
        updatedAt:
          type: string
          format: date-time
          description: "Last update timestamp"
          example: "2025-08-26T21:50:13.608Z"
      required:
        - _id
        - name
        - email
        - role
        - status
        - isVerified

    UserProfile:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            unreadNotifications:
              type: integer
              description: "Number of unread notifications"
              example: 3

    # Authentication Schemas
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: "User's email address"
          example: "john.doe@example.com"
        password:
          type: string
          minLength: 8
          description: "User's password"
          example: "SecurePassword123!"
        rememberMe:
          type: boolean
          default: false
          description: "Extended session duration"
          example: false
      required:
        - email
        - password

    RegisterRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 50
          description: "User's full name"
          example: "John Doe"
        email:
          type: string
          format: email
          description: "User's email address"
          example: "john.doe@example.com"
        password:
          type: string
          minLength: 8
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]"
          description: "Strong password with uppercase, lowercase, number, and special character"
          example: "SecurePassword123!"
        confirmPassword:
          type: string
          description: "Password confirmation"
          example: "SecurePassword123!"
        dateOfBirth:
          type: string
          format: date
          description: "User's date of birth"
          example: "1990-01-15"
        country:
          type: string
          description: "User's country"
          example: "United States"
      required:
        - name
        - email
        - password
        - confirmPassword

    AuthResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/User'
                tokens:
                  type: object
                  properties:
                    accessToken:
                      type: string
                      description: "JWT access token"
                      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    refreshToken:
                      type: string
                      description: "JWT refresh token"
                      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    expiresIn:
                      type: integer
                      description: "Token expiration time in seconds"
                      example: 86400

    ActivationRequest:
      type: object
      properties:
        activationToken:
          type: string
          description: "Account activation token"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        activationCode:
          type: string
          pattern: "^[0-9]{4}$"
          description: "4-digit activation code"
          example: "1234"
      required:
        - activationToken
        - activationCode

    ForgotPasswordRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: "User's email address"
          example: "john.doe@example.com"
      required:
        - email

    ResetPasswordRequest:
      type: object
      properties:
        resetToken:
          type: string
          description: "Password reset token"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        resetCode:
          type: string
          pattern: "^[0-9]{4}$"
          description: "4-digit reset code"
          example: "5678"
        newPassword:
          type: string
          minLength: 8
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]"
          description: "New strong password"
          example: "NewSecurePassword123!"
        confirmPassword:
          type: string
          description: "Password confirmation"
          example: "NewSecurePassword123!"
      required:
        - resetToken
        - resetCode
        - newPassword
        - confirmPassword

    ChangePasswordRequest:
      type: object
      properties:
        currentPassword:
          type: string
          description: "Current password"
          example: "CurrentPassword123!"
        newPassword:
          type: string
          minLength: 8
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]"
          description: "New strong password"
          example: "NewSecurePassword123!"
        confirmPassword:
          type: string
          description: "Password confirmation"
          example: "NewSecurePassword123!"
      required:
        - currentPassword
        - newPassword
        - confirmPassword

    UpdateProfileRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 50
          description: "User's full name"
          example: "John Doe"
        bio:
          type: string
          maxLength: 500
          description: "User biography"
          example: "Content creator passionate about family-friendly content"
        dateOfBirth:
          type: string
          format: date
          description: "User's date of birth"
          example: "1990-01-15"
        country:
          type: string
          description: "User's country"
          example: "United States"
        interests:
          type: array
          items:
            type: string
          description: "User's interests"
          example: ["technology", "education", "family"]
        socialLinks:
          $ref: '#/components/schemas/SocialLinks'

    # User List Responses
    UsersListResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/User'

    UserResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/UserProfile'

    # Social Features
    FollowRequest:
      type: object
      properties:
        userId:
          type: string
          description: "ID of user to follow/unfollow"
          example: "64f8a1b2c3d4e5f6a7b8c9d0"
      required:
        - userId

    FollowersResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "64f8a1b2c3d4e5f6a7b8c9d0"
                      name:
                        type: string
                        example: "John Doe"
                      avatar:
                        $ref: '#/components/schemas/Avatar'
                      isVerified:
                        type: boolean
                        example: true
                      followedAt:
                        type: string
                        format: date-time
                        example: "2025-08-26T21:50:13.608Z"
